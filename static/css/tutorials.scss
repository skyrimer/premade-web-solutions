@import "variables";
// syntax highlighting
pre {
  margin: 2rem 0;
}
code {
  line-height: 1.2;
  font-size: $ff-xs;
}
// Custom cursor
#example-cursor {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  margin: 2rem 0;
}
#cursor,
#aura {
  border-radius: 50%;
  user-select: none;
  pointer-events: none;
}
#cursor {
  $size: 0.5rem;
  width: $size;
  height: $size;
  background: $color-primary;
  transition: opacity 0.1s ease-out;
  &.active {
    opacity: 0;
  }
}
#aura {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 1rem;

  $size: 4rem;
  width: $size;
  height: $size;

  border: 1px solid $color-primary;
  background-color: rgba($color: $color-main, $alpha: 0.1);
  transition: $transition-main;
  &.active {
    transform: scale(1.2);
    border-color: $color-secondary;
  }
}
#cursor.hidden,
#aura.hidden {
  opacity: 0.05;
  transform: scale(0.005);
}

// Floating label
.floating-label-wrapper {
  $paddingLeft: Min(2rem, 5vw);
  position: relative;
  margin: 0 0 Max(1.5em, 4vh);
  width: Min(100%, 50rem);
  input,
  textarea {
    width: 100%;
    font-size: $ff-s;
    padding: 2em $paddingLeft 0.5em;
    color: $color-main;
    background-color: rgba($color: $color-tertiary, $alpha: 0.1);
    border-bottom: 1px solid $color-secondary;
    border-radius: 0.5em;
    &::placeholder {
      color: transparent;
    }
    &:placeholder-shown:not(:focus) + label {
      transform: translateY(-50%);
      font-size: $ff-xs;
    }
  }
  label {
    font-size: $ff-xxs;
    transform: translateY(calc(-50% - 1em));
    user-select: none;
    position: absolute;
    top: 50%;
    left: $paddingLeft;
    color: $color-secondary;
    transition: $transition-main;
    cursor: text;
    img {
      width: auto;
      height: 1.5em;
      margin-right: 0.3em;
    }
  }
  textarea {
    resize: vertical;
    min-height: 5em;
    height: 10em;
    max-height: 30rem;
    & ~ label {
      top: 1em;
      transform: none;
    }
    &:placeholder-shown:not(:focus) + label {
      transform: translateY(1em);
    }
  }
}

// Tabs tutorial
.tabs-wrapper {
  width: Min(700px, 100%);
  margin-bottom: 5rem;
}
.tabs-wrapper.full-width {
  width: Min(1124px, 100%);
  margin-bottom: 0;
  img {
    width: 100%;
    aspect-ratio: 16 / 9;
    transition: $transition-main;
  }
  .effect-box {
    color: $color-primary;
    position: absolute;
    z-index: 10;
    display: inline-block;
    padding: 1em 2em;
    opacity: 0;
    font-size: $ff-m;
    transition: $transition-main;

    &:before,
    &:after {
      content: "";
      position: absolute;
      transition: $transition-main;
      inset: 0;
      border-style: solid;
      border-color: $color-primary;
      transition-delay: $transition-duration / 3;
    }
    &:before {
      border-width: 2px 0 2px 0;
      transform: scaleX(0);
    }
    &:after {
      border-width: 0 2px 0 2px;
      transform: scaleY(0);
    }
    &:hover {
      background: $color-primary;
      box-shadow: 0 0 1em $color-primary;
      color: #000;
    }
  }
  .tab-content.active,
  .tab-content.disappear {
    display: grid;
    place-items: center;
    position: relative;
    padding: 0;
    &:hover {
      img {
        filter: brightness(20%);
      }
      .effect-box {
        opacity: 1;
      }
      .effect-box::after,
      .effect-box::before {
        opacity: 1;
      }
      .effect-box:before,
      .effect-box:after {
        transform: scale(1, 1);
      }
    }
  }
}
.tab-links-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  background-color: $color-main;
  button {
    font-size: $ff-s;
    font-weight: 700;
    flex: 0 0 auto;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 1em 1.5em;
    transition: $tab-animation-duration;
    background-color: $color-main;
    &:hover {
      background-color: lighten($color: $color-secondary, $amount: 30);
    }
    &.active {
      background-color: lighten($color: $color-secondary, $amount: 5);
    }
  }
}
.tab-content {
  display: none;
  padding: 1em 2em;
  border: 1px solid $color-secondary;
  border-top: none;
  h3 {
    color: $color-secondary;
    font-size: 2rem;
    margin-bottom: 0.5em;
  }
  &.active {
    transform: translateY(-2em);
    opacity: 1;
    display: block;
    animation: appear $tab-animation-duration ease forwards;
  }
  &.disappear {
    opacity: 0;
    display: block;
    animation: disappear $tab-animation-duration ease forwards;
  }
}
@keyframes appear {
  from {
    transform: translateY(-2em);
    opacity: 0;
  }

  to {
    transform: none;
    opacity: 1;
  }
}
@keyframes disappear {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    display: none;
  }
}
.popup {
  position: fixed;
  inset: 0;
  z-index: 99;
  display: flex;
  align-items: baseline;
  justify-content: center;
  overflow: hidden auto;
  opacity: 0;
  visibility: hidden;
  transition: $transition-modal-window;
  background-color: $popup-background;
  backdrop-filter: blur(3px);
  &.contact h3 {
    width: 100%;
    text-align: center;
  }
  &.open {
    opacity: 1;
    visibility: visible;
    .popup-body {
      /* Animation */
      transform: perspective(1000px);
      opacity: 1;
    }
  }
}
.popup-body {
  opacity: 0;
  transform: perspective(1000px) translate(0, -100%) rotateX(45deg);
  transition: $transition-modal-window;

  @extend %glassy-section;
  margin: 10vh 0;
  padding: 2rem;
  width: $popup-body-width;
  p {
    color: currentColor;
  }
  h3 {
    color: $color-primary;
    margin: 0;
  }
  img {
    max-width: 30rem;
  }
}
.popup-title {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 2rem;
}
.popup-close {
  width: $cross-size;
  opacity: 0.8;
  transition: $transition-main;
  &:hover {
    opacity: 1;
    transform: rotate(180deg);
  }
}

// Accordions
.accordion-spoiler-wrapper {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  justify-content: center;
  @media screen and (min-width: $breakpoint-accordion-wrapper) {
    flex-direction: row;
  }
}
.accordion,
.spoiler {
  position: relative;
  margin: 0 0 2rem;
}
.accordion-checkbox,
.spoiler-checkbox {
  position: absolute;
  inset: 0;
  opacity: 0;
  visibility: 0;
}

.accordion h3,
.spoiler h3 {
  color: #000;
  margin: 0;
  font-size: Min(2rem, 6vw);
  background: $color-tertiary;
  cursor: pointer;
  position: relative;
  display: flex;
  align-items: center;
  padding: 0.5em;
  transition: $transition-main;
  &:hover {
    background-color: $color-secondary;
  }
  &::before,
  &::after {
    content: "";
    width: Min(1em, 1.5rem);
    height: 2px;
    position: absolute;
    right: 1em;
    top: 50%;
    transform: translateY(-50%);
    transition: $transition-main;
    background-color: #000;
  }
  &::after {
    transform: translateY(-50%) rotate(-90deg);
  }
}
.accordion-content-wrapper,
.spoiler-content-wrapper {
  max-height: 0;
  overflow: hidden;
  transition: $transition-main;
  box-shadow: 0 0 5px 0 rgba(255, 255, 255, 0.4);
  .accordion-content,
  .spoiler-content {
    opacity: 0;
    padding: 2em;
    transition: $transition-main;
  }
}
.accordion.open,
.spoiler.open {
  .accordion-content,
  .spoiler-content {
    opacity: 1;
  }
  h3::after {
    transform: translateY(-50%) rotate(0);
  }
}

// Admin
.table {
  margin-bottom: 5rem;
  .row {
    display: flex;
    &:nth-child(odd) .cell {
      background-color: rgba($color: $color-tertiary, $alpha: 0.1);
    }
    &:nth-child(even) .cell {
      background-color: rgba($color: $color-main, $alpha: 0.1);
    }
    &.headers > .cell {
      background-color: $color-secondary;
      border: 1px solid $color-secondary;
    }
    .cell {
      flex-basis: 100%;
      border: 1px solid $color-main;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 1em;
      transition: $transition-main;
      p {
        margin: 0;
        word-break: break-all;
      }
    }
  }
}
.feedback-section {
  .column-2 {
    margin-top: 3em;
  }
  .floating-label-wrapper {
    margin-top: 0;
  }
  img {
    display: none;
    @media screen and (min-width: $breakpoint-home-columns) {
      display: block;
      width: auto;
    }
  }
}

.tilt-cards-wrapper {
  display: flex;
  gap: 3rem;
  align-items: center;
  justify-content: space-around;
  flex-wrap: wrap;

  .tilt-card {
    flex: 0 0 Min(90%, 500px);
    position: relative;
    aspect-ratio: 1;
    padding: 2em;
    background-size: cover;
    background-repeat: no-repeat;
    border-radius: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transform-style: preserve-3d;
    &:hover {
      h3 {
        color: $color-secondary;
      }
    }
    h3 {
      color: $color-main;
      text-align: center;
      transition: $transition-main;
      transform: translate3d(0, 0, 50px);
    }
    &::before {
      content: "";
      position: absolute;
      z-index: -1;
      width: 100%;
      height: 100%;
      border-radius: 3rem;
      background-color: rgba($color: #000000, $alpha: 0.7);
    }
    &:first-child {
      background: url("/static/images/tea.jpg");
    }
    &:last-child {
      background: url("/static/images/coffee.jpg");
    }
  }
}

.toast {
  $toast-y: 5vh;
  @extend %glassy;
  position: fixed;
  left: 50%;
  visibility: hidden;
  opacity: 0;
  transition: $transition-main;
  transform: translateX(-50%) translateY(-2em);
  top: $toast-y;
  @media screen and (min-width: $breakpoint-burger) {
    bottom: $toast-y;
    top: unset;
  }
  &.active {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
    visibility: visible;
  }
  width: max-content;
  max-width: 92%;
  padding: 2em;
  border-radius: 0.5em;
  z-index: 10;
  p {
    margin: 0;
    text-align: center;
  }
}
