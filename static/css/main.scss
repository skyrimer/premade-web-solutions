@import "variables";
// General
:root {
  font-family: $ff-main;
}
html {
  color: $color-main;
  background-image: repeating-linear-gradient(
      135deg,
      rgb(0, 0, 0) 0px,
      rgb(0, 0, 0) 10px,
      transparent 10px,
      transparent 11px
    ),
    repeating-linear-gradient(
      22.5deg,
      rgb(0, 0, 0) 0px,
      rgb(0, 0, 0) 10px,
      transparent 10px,
      transparent 11px
    ),
    linear-gradient(
      90deg,
      hsl(194, 74%, 56%),
      hsl(266, 74%, 56%),
      hsl(338, 74%, 56%),
      hsl(50, 74%, 56%),
      hsl(122, 74%, 56%)
    );
  background-attachment: fixed;
  min-height: 100vh;
}
body {
  overflow-x: hidden;
}
h1,
h2,
h3,
.font-secondary {
  font-weight: 700;
  font-family: $ff-secondary;
}
.color-secondary {
  color: $color-secondary;
}
h1 {
  font-size: 11vw;
  margin: 0 0 0.5em;
  opacity: 0;
  transform: translateY(10vh);
  color: $color-main;
  @media screen and (min-width: $breakpoint-burger) {
    font-size: $ff-l;
  }
}
h2 {
  font-size: $ff-l;
  color: $color-primary;
  text-align: center;
  margin-bottom: Max(1em, 4vh);
}
h3 {
  font-size: $ff-m;
  line-height: 1.3;
  margin: 1em 0;
  @media screen and (min-width: $breakpoint-home-columns) {
    margin-top: 0;
  }
}
p,
ol.text li {
  font-size: $ff-xs;
  line-height: 1.5;
}
p {
  margin-bottom: 1em;
}
img,
picture {
  width: 100%;
  height: 100%;
}
.inline {
  display: inline;
  width: 1.4em;
}
.btn-wrapper {
  display: inline-flex;
  flex-wrap: wrap;
  column-gap: Min(1rem, 5vw);
}
.btn-link {
  @extend %btn;
  font-size: $ff-s;
  margin: 1em 0 0;

  color: $color-primary;
  border: 1px solid $color-primary;

  &:hover,
  &:focus {
    color: $color-background;
    background-color: $color-primary;
    box-shadow: 0 0 2em rgba($color: $color-primary, $alpha: 0.3),
      0 0 4em rgba($color: $color-primary, $alpha: 0.5);
  }
  &.filled {
    background-color: $color-primary;
    color: $color-background;
  }
  &.secondary {
    color: $color-secondary;
    border: 1px solid $color-secondary;

    &:hover,
    &:focus {
      box-shadow: 0 0 2em rgba($color: $color-secondary, $alpha: 0.3),
        0 0 4em rgba($color: $color-secondary, $alpha: 0.5);
    }
    &.filled {
      background-color: $color-secondary;
      color: $color-background;
    }
  }
}
.btn-toggler {
  @extend %btn;
  font-size: $ff-xs;
  color: $color-primary;
  border: 1px solid currentColor;

  &:hover {
    color: $color-background;
    background: $color-primary;
    box-shadow: 0 0 2em rgba($color: $color-primary, $alpha: 0.3),
      0 0 4em rgba($color: $color-primary, $alpha: 0.5);
  }
}
.inline-link {
  @extend %underline;
  color: $color-primary;
}
.glassy-section {
  @extend %glassy-section;
  padding: Min(3em, 4vh) Min(3em, 4vw);
}
.container {
  width: $container-width;
  margin: 0 auto;
}
#header {
  $size: 5rem;
  .wrapper {
    @extend %glassy;
    position: fixed;
    inset: 0;
    z-index: 5;
    width: 100%;
    height: 100%;
    clip-path: circle($size / 2 at calc(100% - 4.5rem) calc(100% - 4.5rem));
    transition: $transition-main;
    opacity: 0;
    animation: header-onload $transition-animate-in ease forwards;
    @media screen and (min-width: $breakpoint-burger) {
      bottom: unset;
      height: auto;
      clip-path: unset;
    }
  }
  .ham-wrapper {
    position: fixed;
    z-index: 10;
    right: 2rem;
    bottom: 2rem;
    width: $size;
    height: $size;
    border-radius: 50%;
    cursor: pointer;
    background: transparent;
    transition: $transition-main;
    opacity: 0;
    animation: header-onload $transition-animate-in ease forwards;

    @media screen and (min-width: $breakpoint-burger) {
      display: none;
    }
    svg.ham {
      width: 100%;
      cursor: pointer;
      user-select: none;
      path {
        fill: none;
        stroke: $color-primary;
        stroke-width: 5.5;
        stroke-linecap: round;
        transition: $transition-main;
      }
      .top {
        stroke-dasharray: 40 172;
      }
      .middle {
        stroke-dasharray: 40 111;
      }
      .bottom {
        stroke-dasharray: 40 172;
      }
    }
  }
  ul {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    list-style: none;
    text-align: center;
    width: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10vh;
    @media screen and (min-width: $breakpoint-burger) {
      position: unset;
      transform: none;

      flex-direction: row;
      justify-content: space-between;
      gap: clamp(1rem, 3vw, 3rem);

      padding: 2.5rem 0;
      width: $container-width;
      margin: 0 auto;
    }
    li:first-child {
      display: none;
      a[aria-current="page"] svg.logo {
        stroke: $color-secondary;
        &:hover,
        &:focus {
          filter: drop-shadow(0.1em 0.2em 0.5em $color-secondary);
        }
      }
      @media screen and (min-width: $breakpoint-burger) {
        display: block;
        height: 2rem;
        margin-right: auto;
      }
    }
    li:not(:first-child) a {
      @extend %underline;
      color: $color-main;
      font-style: italic;
      font-size: Max(6vw, 1.5rem);
      padding-bottom: 0.2em;
      &[aria-current="page"] {
        color: $color-secondary;
      }
      @media screen and (min-width: $breakpoint-burger) {
        font-size: $ff-s;
      }
    }
  }
  &.active {
    .wrapper {
      clip-path: circle(75%);
    }
    .ham-wrapper svg.ham {
      path {
        stroke: $color-danger;
      }
      .top {
        stroke-dashoffset: -132px;
      }
      .middle {
        stroke-dashoffset: -71px;
      }
      .bottom {
        stroke-dashoffset: -132px;
      }
    }
  }
  @keyframes header-onload {
    to {
      opacity: 1;
    }
  }
}
svg.logo {
  height: 100%;
  fill: none;
  stroke: $color-primary;
  stroke-dasharray: 9% 1%;
  animation: logo-animation 20s linear infinite alternate;
  transition: $transition-main;
  &:hover,
  &:focus {
    filter: drop-shadow(0.1em 0.2em 0.5em $color-primary);
  }
  @keyframes logo-animation {
    to {
      stroke-dashoffset: 100%;
    }
  }
}

.splash {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  flex-direction: column-reverse;
  gap: 2rem;
  @media screen and (min-width: $breakpoint-home-columns) {
    flex-direction: row;
    justify-content: space-between;
    min-height: calc(100vh - $header-size);
  }
  & > .image-wrapper {
    flex-basis: Min(50%, 60rem);
    img {
      max-width: 40rem;
      @media screen and (min-width: $breakpoint-home-columns) {
        max-width: unset;
      }
    }
  }
  & > .splash-text {
    flex-basis: Min(50%, 40rem);
  }
}
main#swup {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: Min(5em, 7vh);
  min-height: 100vh;
  z-index: 1;
  section {
    opacity: 1;
    width: 100%;
    max-width: 100%;
    .column-2 {
      display: flex;
      flex-direction: column;
      @media screen and (min-width: $breakpoint-home-columns) {
        gap: 2em;
        justify-content: space-between;
        > * {
          flex-basis: 100%;
        }
        .image {
          display: flex;
          align-items: center;
          justify-content: center;
        }
      }
    }
    &:first-child {
      margin-top: 2rem;
      @media screen and (min-width: $breakpoint-burger) {
        margin-top: $header-size + 2rem;
      }
      &.splash {
        @media screen and (min-width: $breakpoint-home-columns) {
          margin-top: $header-size;
        }
      }
    }
    &:nth-child(odd) .column-2 {
      @media screen and (min-width: $breakpoint-home-columns) {
        flex-direction: row;
      }
    }
    &:nth-child(even) .column-2,
    &:nth-child(odd).reverse .column-2 {
      @media screen and (min-width: $breakpoint-home-columns) {
        flex-direction: row-reverse;
      }
    }
  }
}
.center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  &.fullscreen {
    justify-content: space-around;
    @media screen and (min-width: $breakpoint-burger) {
      justify-content: center;
    }
  }
}
.copyright {
  text-align: center;
  margin: 0;
}
.wavy-hand {
  display: inline-block;
  user-select: none;
  animation: waving 2.5s ease-in-out infinite;
  transform-origin: 70% 70%;
  @keyframes waving {
    0% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(14deg);
    }
    20% {
      transform: rotate(-8deg);
    }
    30% {
      transform: rotate(14deg);
    }
    40% {
      transform: rotate(-4deg);
    }
    50% {
      transform: rotate(10deg);
    }
    60% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }
}
ol.text {
  list-style: none;
  counter-reset: list-counter;
  li {
    display: flex;
    gap: 0.5em;
    counter-increment: list-counter;
    &::before {
      content: counter(list-counter) ".";
      display: inline-block;
      font-size: 1em;
      height: 1em;
      color: $color-primary;
    }
  }
}
ul.text {
  li {
    margin-left: 1em;
    &::marker {
      color: $color-primary;
    }
  }
}
// Custom scrollbar
.c-scrollbar {
  width: $scrollbar-width;
  opacity: 1;
  z-index: 11;
}
.c-scrollbar_thumb {
  background-color: $color-main;
  opacity: 0.9;
  width: $scrollbar-width;
}
@media screen and (prefers-reduced-motion: no-preference) {
  // Intersection observer
  [data-scroll-section] h2,
  [data-scroll-section] .text > * {
    opacity: 0;
    transform: translateY(2vh);
    transition: opacity $transition-animate-in ease-out,
      transform $transition-animate-in ease-out;
    &.show {
      opacity: 1;
      transform: translateY(0);
    }
  }
  // Swup
  .transition-fade {
    transition: $transition-page-transition;
    opacity: 1;
  }
  html.is-animating .transition-fade,
  html.is-animating .c-scrollbar {
    opacity: 0;
  }
  @media screen and (min-width: $breakpoint-mobile-width) {
    html.is-leaving .transition-fade {
      transform: translateX(-25vw);
    }
    html.is-rendering .transition-fade {
      animation: fadeback $transition-page-transition;
      @keyframes fadeback {
        from {
          transform: translateX(25vw);
        }
        to {
          transform: none;
        }
      }
    }
  }
}

// Tutorials
.cards-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  justify-content: center;
  gap: 3rem;
  list-style-position: inside;
  counter-reset: list;
  .card {
    flex-basis: Min(100%, 30rem);
  }
  &.empty {
    align-items: center;
    flex-direction: column;
    gap: 0;
    &::after,
    &::before {
      transform: translateY(-1em);
    }
    &::after {
      content: "We couldn't find any tutorials😔";
      font-family: $ff-secondary;
      font-size: $ff-m;
    }
    &::before {
      content: "";
      width: Min(30rem, 50%);
      aspect-ratio: 1;
      background-image: url("/static/images/empty.svg");
      background-size: cover;
      font-size: $ff-m;
    }
  }
}
.card {
  counter-increment: list;
  &.hide {
    display: none;
  }
  .card-inner {
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 1rem;
    background-color: rgba($color: $color-tertiary, $alpha: 0.15);
    position: relative;
    padding: Min(3rem, 3vh) Min(3rem, 7vw);
    width: 100%;
    height: 100%;
    transition: background-color $transition-duration ease;
    transform: perspective(1000px);
    transform-style: preserve-3d;
    &::before {
      content: counter(list);
      position: absolute;
      top: Min(3rem, 3vh);
      right: Min(3rem, 3vw);
      font-weight: 900;
      font-size: $ff-l;
      color: rgba($color: $color-main, $alpha: 0.6);
      transition: $transition-main;
      pointer-events: none;
      z-index: -1;
    }
  }
  h3 {
    margin: 2.5em 0 0.5em;
    font-weight: 700;
    font-style: italic;
    color: $color-primary;
    transition: $transition-main;
    transform: translateZ(50px) scale(0.9);
  }
  &:hover,
  &:focus {
    .card-inner {
      background-color: rgba($color: $color-background, $alpha: 0.2);
      &::before {
        transform: scale(0.9);
      }
    }
    h3 {
      color: $color-secondary;
    }
  }
}
// errors
.error-section {
  width: max-content;
  margin-top: 10rem;
  text-align: center;
  img {
    width: Min(60%, 30rem);
  }
}
// Helpful websites
ul.contents-list {
  list-style-position: inside;
  li {
    width: max-content;
    margin: 2rem 0;
    &:hover::marker {
      color: $color-secondary;
    }
    &::marker {
      color: $color-primary;
      transition: $transition-main;
    }
  }
  a {
    font-size: $ff-s;
  }
}
