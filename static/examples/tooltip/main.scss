*,
*:before,
*:after {
  padding: 0;
  margin: 0;
  border: 0;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}
:focus,
:active {
  outline: none;
}
a:focus,
a:active {
  outline: none;
}

html,
body {
  height: 100%;
  width: 100%;
  font-size: 100%;
  line-height: 1;
  font-size: 14px;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
input,
button,
textarea {
  font-family: inherit;
}

input::-ms-clear {
  display: none;
}
button {
  cursor: pointer;
}
button::-moz-focus-inner {
  padding: 0;
  border: 0;
}
a,
a:visited {
  text-decoration: none;
}
a:hover {
  text-decoration: none;
}
img {
  vertical-align: middle;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
}
:root {
  // General
  --color-background: #011324;
  --color-text: #edeff0;
  // Overlay
  --circle-size: 2rem;
  --transition-duration-inner: 600ms;
  // Small tooltip
  --triangle-size: 1em;
  --transition-duration: 300ms;
  --max-width: 20em;
}
// Tooltip
body {
  background: #dcf5ff;
  min-height: 100vh;
  display: grid;
  place-items: center;
  font-family: "Nunito", "sans-serif";
}
.container {
  position: relative;
  width: Min(500px, 90%);
  margin-inline: auto;
  border-radius: var(--circle-size);
}
.background {
  position: absolute;
  inset: 0;
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: var(--circle-size);
    overflow: hidden;
  }
}

.tooltip-inner {
  position: relative;
  min-height: 500px;
  padding: 4em;
  clip-path: circle(
    var(--circle-size) at calc(100% - var(--circle-size)) var(--circle-size)
  );
  background-color: #00c9ff;
  border-radius: var(--circle-size);
  transition: all var(--transition-duration-inner) ease-in-out;

  &:hover,
  &:focus-within {
    clip-path: circle(100%);
    background-color: #1affba;
    &::before {
      color: transparent;
    }
  }

  h2 {
    font-size: 2rem;
    color: black;
    margin-bottom: 1em;
  }

  p {
    color: black;
    font-size: 1.2rem;
    line-height: 1.6;
    margin-bottom: 1em;
  }
  &::before {
    content: "?";
    position: absolute;
    top: var(--circle-size);
    right: var(--circle-size);
    transform: translate(50%, -50%);
    font-size: 1.5rem;
    font-weight: 900;
    transition: color var(--transition-duration-inner);
  }
}

svg {
  width: 2em;
  height: 2em;
}
// Small
@mixin tooltipDirection($direction: "top") {
  &::before {
    @if $direction == "top" {
      border-width: var(--triangle-size) var(--triangle-size) 0 var(--triangle-size);
      border-color: var(--color-background) transparent transparent transparent;
      inset: auto auto 100% 50%;
      transform: translate(-50%, -50%);
    } @else if $direction == "bottom" {
      border-width: 0 var(--triangle-size) var(--triangle-size) var(--triangle-size);
      border-color: transparent transparent var(--color-background) transparent;
      inset: 100% auto auto 50%;
      transform: translate(-50%, 50%);
    } @else if $direction == "right" {
      border-width: var(--triangle-size) var(--triangle-size) var(--triangle-size) 0;
      border-color: transparent var(--color-background) transparent transparent;
      inset: 50% auto auto 100%;
      transform: translate(50%, -50%);
    } @else if $direction == "left" {
      border-width: var(--triangle-size) 0 var(--triangle-size) var(--triangle-size);
      border-color: transparent transparent transparent var(--color-background);
      inset: 50% 100% auto auto;
      transform: translate(-50%, -50%);
    }
  }
  &::after,
  .tooltip {
    @if $direction == "top" {
      inset: auto auto calc(100% + var(--triangle-size)) 50%;
      transform: translate(-50%, 50%);
    } @else if $direction == "bottom" {
      inset: calc(100% + var(--triangle-size)) auto auto 50%;
      transform: translate(-50%, -50%);
    } @else if $direction == "right" {
      inset: 50% auto auto calc(100% + var(--triangle-size));
      transform: translate(-50%, -50%);
    } @else if $direction == "left" {
      inset: 50% calc(100% + var(--triangle-size)) auto auto;
      transform: translate(50%, -50%);
    }
  }
  &:hover,
  &:focus {
    &::before,
    &::after,
    .tooltip {
      @if $direction == "top" or $direction == "bottom" {
        transform: translate(-50%, 0);
      } @else if $direction == "right" or $direction == "left" {
        transform: translate(0, -50%);
      }
    }
  }
}
.tool-hover {
  display: inline-block;
  padding-inline: 0.3em;
  background-color: var(--color-background);
  color: var(--color-text);
}
[data-tip],
.tooltip-wrapper {
  @include tooltipDirection("top");
  display: inline-block;
  position: relative;
  cursor: help;
  width: max-content;
  &::before,
  &:not(.tooltip-wrapper):after,
  .tooltip {
    position: absolute;
    visibility: hidden;
    opacity: 0;
    z-index: -100;
  }
  &::before {
    content: "";
    border-style: solid;
    transition: all var(--transition-duration) ease;
  }
  &:not(.tooltip-wrapper):after,
  .tooltip {
    width: max-content;
    max-width: var(--max-width);
    padding: 1em;
    color: var(--color-text);
    font-size: 0.8em;
    background: var(--color-background);
    border-radius: 0.25em;
    transition: all var(--transition-duration) ease calc(var(--transition-duration) / 1.5);
  }
  &:not(.tooltip-wrapper):after {
    content: attr(data-tip);
  }
  &:hover,
  &:focus {
    &::before,
    &:not(.tooltip-wrapper):after,
    .tooltip {
      visibility: visible;
      opacity: 1;
      z-index: 100;
    }
    &::before {
      transition-delay: calc(var(--transition-duration) / 1.5);
    }
    &:not(.tooltip-wrapper):after,
    .tooltip {
      transition-delay: 0s;
    }
  }
}
.tooltip-wrapper .tooltip p {
  color: var(--color-text);
}
